
  syntax = "proto3";

  package todo;
  
  service TodoService {
    rpc Add(AddTodoRequest) returns (AddTodoResponse);
    rpc ModifyTitle(ModifyTitleTodoRequest) returns (ModifyTitleTodoResponse);
    rpc Complete(CompleteTodoRequest) returns (CompleteTodoResponse);
    rpc GetAll(GetAllTodosRequest) returns (GetAllTodosResponse);
    rpc InitializeSubscriptionConnection(InitializeConnectionRequest) returns (InitializeConnectionResponse);
    rpc KeepSubscriptionAlive(KeepSubscriptionAliveRequest) returns (KeepSubscriptionAliveResponse);
    rpc On(OnTodoRequest) returns (stream OnEvent);
  }
  
  message InitializeConnectionRequest {}
  message InitializeConnectionResponse {
    string subscriberId = 1;
  }
  
  message KeepSubscriptionAliveRequest {
    string subscriberId = 1;
  }
  message KeepSubscriptionAliveResponse {
    optional string renewedAuthToken = 1;
  }
  
  enum TODO_EVENTS {
    ADDED = 0;
    MODIFIED_TITLE = 1;
    DELETED = 2;
  }
  
  message OnTodoRequest {
    string subscriberId = 1;
    repeated TODO_EVENTS events = 2;
  }
  
  message OnEvent {
    oneof event {
      Todo onAdded = 1;
      Todo onModifiedTitle = 2;
      Todo onDeleted = 3;
    }
  }
  
  message ErrorResponse {
    string code = 1;
    string message = 2;
  }
  
  message AddTodoRequest {
    string title = 1;
  }
  
  message AddTodoResponse {
    oneof result {
      AddTodoOKResponse ok = 1;
      AddTodoErrorResponse error = 2;
    }
  }
  
  message AddTodoErrorResponse {
    oneof error {
      ErrorResponse titleOutOfBoundsError = 1;
      ErrorResponse unexpectedError = 2;
    }
  }
  
  message AddTodoOKResponse {
    string id = 1;
  }
  
  message ModifyTitleTodoRequest {
    string id = 1;
    string title = 2;
  }
  
  message ModifyTitleTodoResponse {
    oneof result {
      ModifyTitleTodoOKResponse ok = 1;
      ModifyTitleTodoErrorResponse error = 2;
    }
  }
  
  message ModifyTitleTodoErrorResponse {
    oneof error {
      ErrorResponse todoNotFoundError = 1;
      ErrorResponse unexpectedError = 2;
      ErrorResponse titleOutOfBoundsError = 3;
    }
  }
  
  message ModifyTitleTodoOKResponse {}
  
  message CompleteTodoRequest {
    string id = 1;
  }
  
  message CompleteTodoResponse {
    oneof result {
      CompleteTodoOKResponse ok = 1;
      CompleteTodoErrorResponse error = 2;
    }
  }
  
  message CompleteTodoErrorResponse {
    oneof error {
      ErrorResponse todoNotFoundError = 1;
      ErrorResponse unexpectedError = 2;
      ErrorResponse todoAlreadyCompletedError = 3;
    }
  }
  
  message CompleteTodoOKResponse {}
  
  message GetAllTodosRequest {}
  
  message GetAllTodosResponse {
    oneof result {
      GetAllTodosOKResponse ok = 1;
      GetAllTodosErrorResponse error = 2;
    }
  }
  
  message GetAllTodosErrorResponse {
    oneof error {
      ErrorResponse unexpectedError = 1;
    }
  }
  
  message GetAllTodosOKResponse {
    repeated Todo todo = 1;
  }
  
  message Todo {
    string id = 1;
    string title = 2;
    bool completed = 3;
    string userId = 4;
  }
  